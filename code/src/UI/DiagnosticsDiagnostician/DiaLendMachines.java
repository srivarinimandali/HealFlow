/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.DiagnosticsDiagnostician;

import UI.SystemAdmin.*;
import ApplicationSystem.ApplicationSystem;
import Diagnostic.AssignedMachine;
import Diagnostic.Diagnosticians;
import Diagnostic.Machine;
import Diagnostic.Vendors;
import UI.PharmacyStore.PharStoreRequestMedicines;
import User.UserAccount;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rushita
 */
public class DiaLendMachines extends javax.swing.JPanel {

    /**
     * Creates new form DeleteJPanel
     */
    
    ApplicationSystem applicationSystem;
    Diagnosticians diagnostician;
    DefaultTableModel MachineTableModel;
    DefaultTableModel DiagTableModel;
    
    public DiaLendMachines(ApplicationSystem applicationSystem, UserAccount userAccount) {
        initComponents();
        this.applicationSystem = applicationSystem;
        this.diagnostician = (Diagnosticians) userAccount;
        this.MachineTableModel = (DefaultTableModel) tblDetail.getModel();
         populateVendors();
        populateTable();
       tblDetail.setDefaultRenderer(Object.class, new MyCellRenderer());   
    }
    
     private class MyCellRenderer extends DefaultTableCellRenderer {
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            if (row % 2 == 0) {
                c.setBackground(new Color(204, 204, 255)); 
            } else {
                c.setBackground(new Color(204, 204, 255)); 
            }
            return c;
        }
    }
    
    public void populateTable(){
        MachineTableModel.setRowCount(0);
        Vendors vendor= (Vendors) comboboxvendor.getSelectedItem();
        for(Machine machine : vendor.getMachineDirectory().getMachinesList()){
            Object rows[] = new Object[3];
            rows[0] = machine.getMachineId();
            rows[1] = machine.getMachineName();
            rows[2] = machine.isAvailability();
            
            MachineTableModel.addRow(rows);
        }
    }
    
    public void populateVendors()
    {
        for(Vendors vendor : this.applicationSystem.getDiagnosticUsersDirectory().getVendorsUserAccountDirectory().getVendorUserAccountList())
        {
            this.comboboxvendor.addItem(vendor);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblLendMachine = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        btnLend = new javax.swing.JButton();
        comboboxvendor = new javax.swing.JComboBox<>();
        lblSelect = new javax.swing.JLabel();
        lblVendor = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(56, 16, 151));

        lblLendMachine.setBackground(new java.awt.Color(54, 125, 118));
        lblLendMachine.setFont(new java.awt.Font("American Typewriter", 1, 36)); // NOI18N
        lblLendMachine.setForeground(new java.awt.Color(255, 255, 255));
        lblLendMachine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLendMachine.setText("LEND MACHINES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLendMachine, javax.swing.GroupLayout.DEFAULT_SIZE, 1438, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblLendMachine, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetail);

        btnLend.setBackground(new java.awt.Color(204, 204, 255));
        btnLend.setFont(new java.awt.Font("Charter", 1, 18)); // NOI18N
        btnLend.setText("LEND");
        btnLend.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnLend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLendActionPerformed(evt);
            }
        });

        comboboxvendor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        comboboxvendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxvendorActionPerformed(evt);
            }
        });

        lblSelect.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblSelect.setText("Select a Machine to Lend ");

        lblVendor.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblVendor.setText("Vendors");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblVendor)
                        .addGap(18, 18, 18)
                        .addComponent(comboboxvendor, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLend, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSelect))))
                .addGap(87, 87, 87)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVendor)
                            .addComponent(comboboxvendor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLend, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(406, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLendActionPerformed
        // TODO add your handling code here:
        int row = tblDetail.getSelectedRow();
        Vendors vendor= (Vendors) comboboxvendor.getSelectedItem();
        
        
        if(row == -1)
        {
            JOptionPane.showMessageDialog(null,"Please select a Machine", "Select Warning", 2);
            return;
        }
        
        Machine machine = vendor.getMachineDirectory().getMachinesList().get(row);
        if(!machine.isAvailability()){
            JOptionPane.showMessageDialog(null,"Selected Machine is not Available", "Select Warning", 2);
        return;
        }
        
        machine.setAvailability(false);
        AssignedMachine am = diagnostician.getAssgMachineDirectory().assignedMachine(machine, diagnostician);
        
        vendor.increaselends();
        
        JOptionPane.showMessageDialog(null, "Machine Lent Succefully");
    }//GEN-LAST:event_btnLendActionPerformed

    private void comboboxvendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxvendorActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_comboboxvendorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLend;
    private javax.swing.JComboBox<Vendors> comboboxvendor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLendMachine;
    private javax.swing.JLabel lblSelect;
    private javax.swing.JLabel lblVendor;
    private javax.swing.JTable tblDetail;
    // End of variables declaration//GEN-END:variables
}
